global
  log 127.0.0.1 local2
  chroot /var/lib/haproxy
  pidfile /var/run/haproxy.pid
  maxconn 4000
  user nobody
  group nobody
  tune.ssl.default-dh-param 2048
  daemon

  ssl-server-verify required

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats

defaults
  mode http
  log global
  option httplog
  option dontlognull
  option http-server-close
  #option forwardfor except 127.0.0.0/8
  option redispatch
  retries 3
  timeout http-request 10s
  timeout queue 1m
  timeout connect 10s
  timeout client 1m
  timeout server 1m
  timeout http-keep-alive 10s
  timeout check 10s
  maxconn 1000

frontend stats
  bind *:1936
  stats enable
  stats hide-version
  #stats scope .
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth stats:${STATS_PASSWORD}
  #stats admin if TRUE

frontend http
  bind *:80
  mode http
  redirect scheme https if { hdr(host) -i ${EXTERN} } !{ ssl_fc }

  redirect prefix https://${EXTERN}/grafana code 301 if { hdr(host) -i grafana.${EXTERN} }
  redirect prefix https://${EXTERN}/dashboard code 301 if { hdr(host) -i dashboard.${EXTERN} }

  use_backend prometheus if { hdr(host) -i prometheus.${EXTERN} }
  use_backend nsqadmin if { hdr(host) -i nsqadmin.${EXTERN} }

  default_backend vulcand

frontend https
  bind *:443 ssl crt /etc/haproxy/ssl/tools.seibert-media.net.pem no-tls-tickets ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4 no-sslv3
  mode http

  redirect location http://prometheus.${EXTERN} code 301 if { path_beg /prometheus }
  redirect location http://nsqadmin.${EXTERN} code 301 if { path_beg /nsqadmin }

  use_backend grafana if { path_beg /grafana }
  use_backend dashboard if { path_beg /dashboard }

  default_backend vulcand

backend grafana
  mode http
  reqrep ^([^\ :]*)\ /grafana/(.*) \1\ /\2
  reqrep ^([^\ :]*)\ /grafana(\ .*) \1\ /\2
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30001 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30001 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30001 check maxconn 100

userlist prometheus_users
  user bborbe insecure-password ${PROMETHEUS_PASSWORD}

backend prometheus
  mode http
  acl auth_acl http_auth(prometheus_users)
  http-request auth realm basicauth unless auth_acl
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30002 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30002 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30002 check maxconn 100

userlist dashboard_users
  user bborbe insecure-password ${DASHBOARD_PASSWORD}

backend dashboard
  mode http
  acl auth_acl http_auth(dashboard_users)
  http-request auth realm basicauth unless auth_acl
  reqrep ^([^\ :]*)\ /dashboard/(.*) \1\ /\2
  reqrep ^([^\ :]*)\ /dashboard(\ .*) \1\ /\2
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30013 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30013 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30013 check maxconn 100

userlist nsqadmin_users
  user bborbe insecure-password ${NSQ_ADMIN_PASSWORD}

backend nsqadmin
  mode http
  acl auth_acl http_auth(nsqadmin_users)
  http-request auth realm basicauth unless auth_acl
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30029 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30029 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30029 check maxconn 100

backend vulcand
  mode http
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30080 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30080 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30080 check maxconn 100

listen minecraft :20001
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30000 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30000 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30000 check maxconn 100

listen mumble :64738
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30019 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30019 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30019 check maxconn 100

listen backuprsync :2222
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30022 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30022 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30022 check maxconn 100
