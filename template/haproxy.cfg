global
  log 127.0.0.1 local2
  chroot /var/lib/haproxy
  pidfile /var/run/haproxy.pid
  maxconn 100
  user nobody
  group nobody
  tune.ssl.default-dh-param 2048
  daemon

  ssl-server-verify required

  # turn on stats unix socket
  stats socket /var/lib/haproxy/stats

defaults
  mode http
  log global
  option httplog
  option dontlognull
  option http-server-close
  #option forwardfor except 127.0.0.0/8
  option redispatch
  retries 3
  timeout http-request 10s
  timeout queue 1m
  timeout connect 10s
  timeout client 1m
  timeout server 1m
  timeout http-keep-alive 10s
  timeout check 10s
  maxconn 1000

frontend stats
  bind *:1936
  stats enable
  stats hide-version
  #stats scope .
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth stats:${STATS_PASSWORD}
  #stats admin if TRUE

frontend http
  bind *:1080
  mode http

  redirect scheme https if !{ ssl_fc } !{ path_beg /.well-known/acme-challenge/ }
  default_backend letsencrypt-backend

frontend https
  bind *:1443 ssl crt /etc/haproxy/ssl/tools.seibert-media.net.pem
  mode http

	acl aptly hdr(host) -i aptly.tools.seibert-media.net path_beg /aptly
	reqrep ^([^\ :]*)\ /aptly/\d+/(.+)/?     \1\ /\2 if aptly
	redirect prefix / code 301                       if aptly

  redirect location https://jenkins.tools.seibert-media.net code 301 if { hdr(host) -i jenkins.tools.seibert-media.net } { path_beg /jenkins }
  redirect location https://prometheus.tools.seibert-media.net code 301 if { path_beg /prometheus }
  redirect location https://nsqadmin.tools.seibert-media.net code 301 if { path_beg /nsqadmin }
  redirect prefix https://tools.seibert-media.net/grafana code 301 if { hdr(host) -i grafana.tools.seibert-media.net }
  redirect prefix https://tools.seibert-media.net/dashboard code 301 if { hdr(host) -i dashboard.tools.seibert-media.net }

  use_backend grafana if { path_beg /grafana }
  use_backend dashboard if { path_beg /dashboard }
  use_backend prometheus if { hdr(host) -i prometheus.tools.seibert-media.net }
  use_backend nsqadmin if { hdr(host) -i nsqadmin.tools.seibert-media.net }

  default_backend traefik-proxy

backend letsencrypt-backend
   server letsencrypt 127.0.0.1:8080

backend grafana
  mode http
  reqrep ^([^\ :]*)\ /grafana/(.*) \1\ /\2
  reqrep ^([^\ :]*)\ /grafana(\ .*) \1\ /\2
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30001 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30001 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30001 check maxconn 100

userlist prometheus_users
  user bborbe insecure-password ${PROMETHEUS_PASSWORD}

backend prometheus
  mode http
  acl auth_acl http_auth(prometheus_users)
  http-request auth realm basicauth unless auth_acl
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30002 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30002 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30002 check maxconn 100

userlist dashboard_users
  user bborbe insecure-password ${DASHBOARD_PASSWORD}

backend dashboard
  mode http
  acl auth_acl http_auth(dashboard_users)
  http-request auth realm basicauth unless auth_acl
  reqrep ^([^\ :]*)\ /dashboard/(.*) \1\ /\2
  reqrep ^([^\ :]*)\ /dashboard(\ .*) \1\ /\2
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30013 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30013 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30013 check maxconn 100

userlist nsqadmin_users
  user bborbe insecure-password ${NSQ_ADMIN_PASSWORD}

backend nsqadmin
  mode http
  acl auth_acl http_auth(nsqadmin_users)
  http-request auth realm basicauth unless auth_acl
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30029 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30029 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30029 check maxconn 100

backend traefik-proxy
  mode http
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30081 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30081 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30081 check maxconn 100

backend traefik-admin
  mode http
  option forwardfor
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30082 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30082 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30082 check maxconn 100

listen minecraft
  bind :20001
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30000 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30000 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30000 check maxconn 100

listen mumble
  bind :64738
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30019 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30019 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30019 check maxconn 100

listen backuprsync
  bind :2222
  mode tcp
  option tcplog
  balance roundrobin
  server app0 ${K8S_ENDPOINT_0}:30022 check maxconn 100
  server app1 ${K8S_ENDPOINT_1}:30022 check maxconn 100
  server app2 ${K8S_ENDPOINT_2}:30022 check maxconn 100
